AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  arSam

  Sample SAM Template for arSam
Parameters:
 ###ENV VARS GO HERE
  AWSAccountList:
      Type: String
      Default: 'default'
 
Globals:
  Api:
      Cors:
          AllowMethods: "'POST,GET,OPTIONS, PUT'"
          AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-App-Version'"
          AllowOrigin: "'*'"

Resources:
##LAYERS HERE
  VarianceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: varianceLayer
      Description: Variance Layer
      ContentUri: layers/varianceLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile
  
  SubAreaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: subAreaLayer
      Description: SubArea Layer
      ContentUri: layers/subAreaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: responseLayer
      Description: Response Layer
      ContentUri: layers/responseLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  PermissionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: permissionLayer
      Description: Permission Layer
      ContentUri: layers/permissionLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  LoggerLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: loggerLayer
      Description: Logger Layer
      ContentUri: layers/loggerLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  KeycloakLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: keycloakLayer
      Description: Keycloak Layer
      ContentUri: layers/keycloakLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  FunctionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: functionsLayer
      Description: Functions Layer
      ContentUri: layers/functionsLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  FormulaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: formulaLayer
      Description: Formula Layer
      ContentUri: layers/formulaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  DynamoLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: dynamoLayer
      Description: Dynamo Layer
      ContentUri: layers/dynamoLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ConstantsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: constantsLayer
      Description: Constants Layer
      ContentUri: layers/constantsLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  CaptchaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: captchaLayer
      Description: Captcha Layer
      ContentUri: layers/captchaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile