AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  arSam

  Sample SAM Template for arSam
Parameters:

 ###ENV VARS GO HERE
  ### Cloudwatch Alarm
  #RocketchatURL:
  #  Type: String
  #  Default: 'https://rocketchat.com'
  #RocketchatBearerToken:
  #  Type: String
  #  Default: 'defaultToken'
  #AWSAccountList:
  #  Type: String
  #  Default: 'defaultAccount'
  ## Export
  ExportFunctionName:
    Type: String
    Default: 'bcparks-ar-api-api-exportInvokable'
  ExportExpiryTime:
    Type: String
    Default: '30'
  FilePath:
    Type: String
    Default: './'
  FileNameExport:
    Type: String
    Default: 'A&R_Export'
  FileNameVarianceExport:
    Type: String
    Default: 'A&R_Variance_Report'
  CsvSysadminSchema:
    Type: String
    Default: 'defaultSchema'
  JobUpdateModulo:
    Type: String
    Default: 'defaultModulo'
  DisableProgressUpdates:
    Type: String
    Default: 'false'
  DisableHighAccuracyProgressPercentage:
    Type: String
    Default: 'false'
  S3BucketData:
    Type: String
    Default: 'defaultBucket' 
  TableName:
    Type: String
    Default: 'ar-tests'
  IsOffline: 
    Type: String
    Default: "true"
  AWSRegion:
    Type: String
    Default: "ca-central-1"
  DynamoDBEndpointURL: 
    Type: String
    Default: "http://172.0.0.2:8000"
  ConfigTableName: 
    Type: String
    Default: "ar-config"
  JwtSecret: 
    Type: String 
    Default: "defaultSecret"
  JwtSignExpiry: 
    Type: String
    Default: "5"
  CaptchaSignExpiry: 
    Type: String
    Default: "30"
  PrivateKey: 
    Type: String
    Default: ""
  SSOIssuer: 
    Type: String
    Default: "https://dev.loginproxy.gov.bc.ca/auth/realms/bcparks-service-transformation"
  SSOJwksuri: 
    Type: String
    Default: "https://dev.loginproxy.gov.bc.ca/auth/realms/bcparks-service-transformation/protocol/openid-connect/certs"
  LogLevel: 
    Type: String
    Default: "error"
 
Globals:
  Api:
    Cors:
      AllowMethods: "'POST,GET,OPTIONS, PUT'"
      AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-App-Version'"
      AllowOrigin: "'*'"

Resources:
##LAYERS HERE
  VarianceLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: varianceLayer
      Description: Variance Layer
      ContentUri: layers/varianceLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile
  
  SubAreaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: subAreaLayer
      Description: SubArea Layer
      ContentUri: layers/subAreaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ResponseLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: responseLayer
      Description: Response Layer
      ContentUri: layers/responseLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  PermissionLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: permissionLayer
      Description: Permission Layer
      ContentUri: layers/permissionLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  LoggerLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: loggerLayer
      Description: Logger Layer
      ContentUri: layers/loggerLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  KeycloakLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: keycloakLayer
      Description: Keycloak Layer
      ContentUri: layers/keycloakLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  FunctionsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: functionsLayer
      Description: Functions Layer
      ContentUri: layers/functionsLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  FormulaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: formulaLayer
      Description: Formula Layer
      ContentUri: layers/formulaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  DynamoLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: dynamoLayer
      Description: Dynamo Layer
      ContentUri: layers/dynamoLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ConstantsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: constantsLayer
      Description: Constants Layer
      ContentUri: layers/constantsLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  CaptchaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: captchaLayer
      Description: Captcha Layer
      ContentUri: layers/captchaLayer/
      CompatibleRuntimes:
        - nodejs18.x
      LicenseInfo: 'Apache-2.0'
      RetentionPolicy: Retain
    Metadata:
      BuildMethod: makefile

  ### FUNCTIONS

  ############
  # Activity #
  ############
  ActivityGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          JWT_SECRET: !Ref JwtSecret
          JWT_SIGN_EXPIRY: !Ref JwtSignExpiry
          CAPTCHA_SIGN_EXPIRY: !Ref CaptchaSignExpiry
          PRIVATE_KEY: !Ref PrivateKey
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      CodeUri: activity/GET/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref LoggerLayer
          - !Ref PermissionLayer
          - !Ref ResponseLayer
          - !Ref DynamoLayer
      Events:
        activityGet:
          Type: Api
          Properties:
            Path: /activity
            Method: get

  ActivityPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          JWT_SECRET: !Ref JwtSecret
          JWT_SIGN_EXPIRY: !Ref JwtSignExpiry
          CAPTCHA_SIGN_EXPIRY: !Ref CaptchaSignExpiry
          PRIVATE_KEY: !Ref PrivateKey
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      CodeUri: activity/POST/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref DynamoLayer
          - !Ref PermissionLayer
          - !Ref LoggerLayer
          - !Ref VarianceLayer
          - !Ref ConstantsLayer
      Events:
        activityPost:
          Type: Api
          Properties:
            Path: /activity
            Method: post
        activityRecordLock:
          Type: Api
          Properties:
            Path: /activity/lock
            Method: post
        activityRecordUnlock:
          Type: Api
          Properties:
            Path: /activity/unlock
            Method: post

  ActivityDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
      CodeUri: activity/DELETE/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref LoggerLayer
      Events:
        activityDelete:
          Type: Api
          Properties:
            Path: /activity
            Method: delete

  ActivityPutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
      CodeUri: activity/PUT/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref LoggerLayer
      Events:
        activityPut:
          Type: Api
          Properties:
            Path: /activity
            Method: put

  ####################
  # Cloudwatch Alarm #
  ####################
  # cloudwatchAlarmFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: cloudwatchAlarm/
  #     Timeout: 60
  #     Handler: index.handler
  #     Runtime: nodejs18.x
  #     Layers:
  #       - !Ref LoggerLayer
  #       - !Ref DynamoLayer
  #     Environment:
  #       Variables:
  #         ROCKETCHAT_URL: !Ref RocketchatURL
  #         ROCKETCHAT_BEARER_TOKEN: !Ref RocketchatBearerToken
  #         AWS_ACCOUNT_LIST: !Ref AWSAccountList
  #     Events:
  #       cloudwatchAlarm:
  #         Type: Api
  #         Properties:
  #           Path: /cloudwatchAlarm
  #           Method: get

  ##########
  # Export #
  ##########
  ExportGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: export/GET/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_TABLE: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
          IS_OFFLINE: !Ref IsOffline
          EXPORT_FUNCTION_NAME: !Ref ExportFunctionName
          EXPORT_EXPIRY_TIME: !Ref ExportExpiryTime
      Layers:
          - !Ref DynamoLayer
          - !Ref ResponseLayer
          - !Ref PermissionLayer
          - !Ref FunctionsLayer
          - !Ref LoggerLayer
      Events:
        exportGet:
          Type: Api
          Properties:
            Path: /export
            Method: get

  ExportInvokableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: export/invokable/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          FILE_PATH: !Ref FilePath
          FILE_NAME: !Ref FileNameExport
          CSV_SYSADMIN_SCHEMA: !Ref CsvSysadminSchema
          JOB_UPDATE_MODULO: !Ref JobUpdateModulo
          DISABLE_PROGRESS_UPDATES: !Ref DisableProgressUpdates
          DISABLE_HIGH_ACCURACY_PROGRESS_PERCENTAGE: !Ref DisableHighAccuracyProgressPercentage
          S3_BUCKET_DATA: !Ref S3BucketData
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          LOG_LEVEL: !Ref LogLevel
      Layers:
          - !Ref LoggerLayer
          - !Ref DynamoLayer
          - !Ref FunctionsLayer
          - !Ref FormulaLayer

  ###################
  # Export Variance #
  ###################
  VarianceExportGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: export-variance/GET/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          JWT_SECRET: !Ref JwtSecret
          JWT_SIGN_EXPIRY: !Ref JwtSignExpiry
          CAPTCHA_SIGN_EXPIRY: !Ref CaptchaSignExpiry
          PRIVATE_KEY: !Ref PrivateKey
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      Layers:
          - !Ref LoggerLayer
          - !Ref PermissionLayer
          - !Ref ResponseLayer
          - !Ref DynamoLayer
      Events:
        varianceExportGet:
          Type: Api
          Properties:
            Path: /export-variance
            Method: get

  VarianceExportInvokableFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: export-variance/invokable/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          FILE_PATH: !Ref FilePath
          FILE_NAME: !Ref FileNameVarianceExport
          IS_OFFLINE: !Ref IsOffline
          S3_BUCKET_DATA: !Ref S3BucketData
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          LOG_LEVEL: !Ref LogLevel
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
      Layers:
          - !Ref LoggerLayer
          - !Ref ConstantsLayer
          - !Ref DynamoLayer

  ###################
  # Fiscal Year End #
  ###################
  FiscalYearEndGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      CodeUri: fiscalYearEnd/GET/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref LoggerLayer
          - !Ref PermissionLayer
          - !Ref ResponseLayer
          - !Ref DynamoLayer
      Events:
        fiscalYearEndGet:
          Type: Api
          Properties:
            Path: /fiscalYearEnd
            Method: get

  FiscalYearEndPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      CodeUri: fiscalYearEnd/POST/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
          - !Ref DynamoLayer
          - !Ref ResponseLayer
          - !Ref LoggerLayer
          - !Ref PermissionLayer
      Events:
        fiscalYearEndLock:
          Type: Api
          Properties:
            Path: /fiscalYearEnd/lock
            Method: post
        fiscalYearEndUnlock:
          Type: Api
          Properties:
            Path: /fiscalYearEnd/unlock
            Method: post

  ########
  # Park #
  ########
  ParkGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          JWT_SECRET: !Ref JwtSecret
          JWT_SIGN_EXPIRY: !Ref JwtSignExpiry
          CAPTCHA_SIGN_EXPIRY: !Ref CaptchaSignExpiry
          PRIVATE_KEY: !Ref PrivateKey
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOG_LEVEL: !Ref LogLevel
      CodeUri: park/GET/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
        - !Ref DynamoLayer
        - !Ref ResponseLayer
        - !Ref PermissionLayer
        - !Ref LoggerLayer
      Events:
        parkGet:
          Type: Api
          Properties:
            Path: /park
            Method: get

  ParkPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
          SSO_ISSUER: !Ref SSOIssuer
          SSO_JWKSURI: !Ref SSOJwksuri
          LOC_LEVEL: !Ref LogLevel
      CodeUri: park/POST/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
        - !Ref DynamoLayer
        - !Ref PermissionLayer
        - !Ref ResponseLayer
        - !Ref LoggerLayer
      Events:
        fiscalYearEndLock:
          Type: Api
          Properties:
            Path: /park
            Method: post

  ParkPutFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
      CodeUri: park/PUT/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
        - !Ref LoggerLayer
      Events:
        fiscalYearEndLock:
          Type: Api
          Properties:
            Path: /park
            Method: put

  ###############
  # Read Config #
  ###############
  ReadConfigFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          LOG_LEVEL: !Ref LogLevel
          TABLE_NAME: !Ref TableName
          CONFIG_TABLE_NAME: !Ref ConfigTableName
          AWS_REGION: !Ref AWSRegion
          DYNAMODB_ENDPOINT_URL: !Ref DynamoDBEndpointURL
      CodeUri: readConfig/
      Timeout: 60
      Handler: index.handler
      Runtime: nodejs18.x
      Layers:
        - !Ref DynamoLayer
        - !Ref ResponseLayer
        - !Ref LoggerLayer
      Events:
        readConfig:
          Type: Api
          Properties:
            Path: /readConfig
            Method: get
